[{"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\index.js":"1","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\App.js":"2","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\reportWebVitals.js":"3","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\MovieList.js":"4","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\MovieCard.js":"5","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\ModalInput.js":"6","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\Filter.js":"7","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\Trailer.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3046,"mtime":1609032529311,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1825,"mtime":1609032646853,"results":"13","hashOfConfig":"10"},{"size":797,"mtime":1609032163097,"results":"14","hashOfConfig":"10"},{"size":2934,"mtime":1609023261714,"results":"15","hashOfConfig":"10"},{"size":1095,"mtime":1608514788434,"results":"16","hashOfConfig":"10"},{"size":674,"mtime":1609031385658,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vd8lau",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\index.js",[],["38","39"],"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\App.js",["40"],"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\reportWebVitals.js",[],"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\MovieList.js",["41","42"],"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\MovieCard.js",["43"],"import React from \"react\";\r\nimport \"./MovieCard.css\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst MovieCard = (props) => {\r\n\r\n  return (\r\n    <div className=\"container\"> \r\n    <div className=\"card\">\r\n      <div className=\"imgBox\">\r\n      \r\n        <img src={props.el.posterurl} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <h2>{props.el.title}</h2>\r\n        <h2>\r\n          <StarRatingComponent\r\n            name=\"rate1\"\r\n            starCount={5}\r\n            value={props.el.rate}\r\n          />\r\n        </h2>\r\n      \r\n        <Link to={`/movies/${props.el.id}`}>\r\n        <button>Watch Trailer</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n)\r\n};\r\n\r\n\r\n\r\nexport default MovieCard;\r\n\r\n","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\ModalInput.js",["44"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"./ModalInput.css\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction getModalStyle() {\r\n  const top = 45;\r\n  const left = 45;\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction ModalInput({callBack}) {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n    const [inputValue, setInputValue] = useState({\r\n        id: uuidv4(),\r\n        title:'',\r\n        rate:'',\r\n        description:'',\r\n        posterurl:'',\r\n        trailer:\"\",\r\n    })\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      const name = e.target.name;\r\n      const value= e.target.value;\r\n      setInputValue({...inputValue, [name]: value})\r\n  }\r\n  \r\n  \r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h4>Add you favorite movie</h4>\r\n      <form className='form' onSubmit={handleSubmit}>\r\n          <input className='input' type='text' name='title' value={inputValue.title} onChange={handleSubmit} placeholder='Title' />\r\n          <input className='input' type='text' name='rate' value={inputValue.rate} onChange={handleSubmit} placeholder='Rating' />\r\n          <input className='input' type='text' name='description' value={inputValue.description} onChange={handleSubmit} placeholder='description' />\r\n          <input className='input' type='text' name='posterurl' value={inputValue.posterurl} onChange={handleSubmit} placeholder='Image' />\r\n          <input className='input' type='text' name='trailer' value={inputValue.trailer} onChange={handleSubmit} placeholder='trailer' />\r\n          <span onClick={()=>setOpen(false)}>\r\n              <button className='btn' type='submit' onClick={()=> callBack(inputValue)} >submit</button>\r\n            </span>\r\n            \r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn\" type=\"button\" onClick={handleOpen}>\r\n        Add a movie\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default ModalInput;","C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\Filter.js",[],"C:\\Users\\nader\\Desktop\\checkpoint-react-hooks\\hooks1\\src\\component\\Trailer.js",["45","46"],"import React from 'react'\r\nimport \"./Trailer.css\";\r\n\r\nconst Trailer = ({filteredList,match}) => {\r\n  \r\n    const trai = filteredList.filter((movie) => movie.id == match.params.id)\r\n  \r\n    let show;\r\n    let video;\r\n    if (trai.length > 0) {\r\n        show = <> <p>{trai[0].description} </p> </>\r\n        video = <iframe width=\"560\" height=\"315\" src={trai[0].trailer} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n    } \r\n    \r\n    return (\r\n        <div className=\"trailer\" >\r\n\r\n            <p>{show}</p>\r\n            {video}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trailer\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":7,"column":18,"nodeType":"53","messageId":"54","endLine":7,"endColumn":27},{"ruleId":"55","severity":1,"message":"56","line":23,"column":58,"nodeType":"57","messageId":"58","endLine":23,"endColumn":60},{"ruleId":"59","severity":1,"message":"60","line":31,"column":7,"nodeType":"61","endLine":31,"endColumn":20,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":17,"column":9,"nodeType":"65","endLine":17,"endColumn":41},{"ruleId":"51","severity":1,"message":"66","line":4,"column":10,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":6,"column":58,"nodeType":"69","messageId":"70","endLine":6,"endColumn":60},{"ruleId":"71","severity":1,"message":"72","line":12,"column":17,"nodeType":"65","endLine":12,"endColumn":201},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'setMovies' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newMovies'. Either include it or remove the dependency array.","ArrayExpression",["75"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [search, rate, newMovies]",{"range":"78","text":"79"},[1096,1109],"[search, rate, newMovies]"]